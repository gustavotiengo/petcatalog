version: '3.8'
services:
  app:
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      context: .
    depends_on:
      - postgres
      - redis
    ports:
      - "8080:8080"
      - "8081:8081"
  postgres:
    image: 'postgres:15.1-alpine'
    environment:
      - "POSTGRES_DB=petcatalog"
      - "POSTGRES_PASSWORD=admin"
      - "POSTGRES_USER=admin"
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: unless-stopped
  redis:
    image: redis:7.2.3-alpine
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - redis-network
    restart: unless-stopped
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=redis
    ports:
      - "8082:8081"
    networks:
      - redis-network
    depends_on:
      - redis
  flyway:
    image: flyway/flyway:9.22.3-alpine
    environment:
      - FLYWAY_EDITION=community
    command: -url=jdbc:postgresql://postgres:5432/petcatalog -schemas=public -user=admin -password=admin -connectRetries=3 migrate
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql/
    depends_on:
      - postgres
  prometheus:
    restart: unless-stopped
    image: bitnami/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    restart: unless-stopped
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
volumes:
  postgres:
    driver: local
  redis:
    driver: local
networks:
  redis-network:
    driver: bridge