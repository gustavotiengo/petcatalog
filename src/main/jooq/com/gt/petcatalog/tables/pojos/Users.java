/*
 * This file is generated by jOOQ.
 */
package com.gt.petcatalog.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final UUID externalId;
    private final String name;
    private final String phone;
    private final String email;
    private final String address;
    private final String region;
    private final String city;
    private final String state;
    private final LocalDateTime createdAt;
    private final LocalDateTime lastUpdate;

    public Users(Users value) {
        this.id = value.id;
        this.externalId = value.externalId;
        this.name = value.name;
        this.phone = value.phone;
        this.email = value.email;
        this.address = value.address;
        this.region = value.region;
        this.city = value.city;
        this.state = value.state;
        this.createdAt = value.createdAt;
        this.lastUpdate = value.lastUpdate;
    }

    public Users(
        Integer id,
        UUID externalId,
        String name,
        String phone,
        String email,
        String address,
        String region,
        String city,
        String state,
        LocalDateTime createdAt,
        LocalDateTime lastUpdate
    ) {
        this.id = id;
        this.externalId = externalId;
        this.name = name;
        this.phone = phone;
        this.email = email;
        this.address = address;
        this.region = region;
        this.city = city;
        this.state = state;
        this.createdAt = createdAt;
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.users.external_id</code>.
     */
    public UUID getExternalId() {
        return this.externalId;
    }

    /**
     * Getter for <code>public.users.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>public.users.phone</code>.
     */
    public String getPhone() {
        return this.phone;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>public.users.address</code>.
     */
    public String getAddress() {
        return this.address;
    }

    /**
     * Getter for <code>public.users.region</code>.
     */
    public String getRegion() {
        return this.region;
    }

    /**
     * Getter for <code>public.users.city</code>.
     */
    public String getCity() {
        return this.city;
    }

    /**
     * Getter for <code>public.users.state</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Getter for <code>public.users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>public.users.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.externalId == null) {
            if (other.externalId != null)
                return false;
        }
        else if (!this.externalId.equals(other.externalId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.phone == null) {
            if (other.phone != null)
                return false;
        }
        else if (!this.phone.equals(other.phone))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.region == null) {
            if (other.region != null)
                return false;
        }
        else if (!this.region.equals(other.region))
            return false;
        if (this.city == null) {
            if (other.city != null)
                return false;
        }
        else if (!this.city.equals(other.city))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.externalId == null) ? 0 : this.externalId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.phone == null) ? 0 : this.phone.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.region == null) ? 0 : this.region.hashCode());
        result = prime * result + ((this.city == null) ? 0 : this.city.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(externalId);
        sb.append(", ").append(name);
        sb.append(", ").append(phone);
        sb.append(", ").append(email);
        sb.append(", ").append(address);
        sb.append(", ").append(region);
        sb.append(", ").append(city);
        sb.append(", ").append(state);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(lastUpdate);

        sb.append(")");
        return sb.toString();
    }
}
