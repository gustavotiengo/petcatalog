/*
 * This file is generated by jOOQ.
 */
package com.gt.springtools.tables.records;


import com.gt.springtools.tables.User;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user.id</code>.
     */
    public UserRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user.external_id</code>.
     */
    public UserRecord setExternalId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user.external_id</code>.
     */
    public UUID getExternalId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.user.name</code>.
     */
    public UserRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user.phone</code>.
     */
    public UserRecord setPhone(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user.phone</code>.
     */
    public String getPhone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user.email</code>.
     */
    public UserRecord setEmail(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.user.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user.address</code>.
     */
    public UserRecord setAddress(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.user.address</code>.
     */
    public String getAddress() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.user.region</code>.
     */
    public UserRecord setRegion(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.user.region</code>.
     */
    public String getRegion() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.user.city</code>.
     */
    public UserRecord setCity(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.user.city</code>.
     */
    public String getCity() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.user.state</code>.
     */
    public UserRecord setState(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.user.state</code>.
     */
    public String getState() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.user.created_at</code>.
     */
    public UserRecord setCreatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.user.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.user.last_update</code>.
     */
    public UserRecord setLastUpdate(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.user.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, UUID externalId, String name, String phone, String email, String address, String region, String city, String state, LocalDateTime createdAt, LocalDateTime lastUpdate) {
        super(User.USER);

        setId(id);
        setExternalId(externalId);
        setName(name);
        setPhone(phone);
        setEmail(email);
        setAddress(address);
        setRegion(region);
        setCity(city);
        setState(state);
        setCreatedAt(createdAt);
        setLastUpdate(lastUpdate);
        resetChangedOnNotNull();
    }
}
